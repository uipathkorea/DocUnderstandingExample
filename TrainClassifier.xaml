<Activity mc:Ignorable="sap sap2010" x:Class="Test" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="574,1397" sap2010:WorkflowViewState.IdRef="Test_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:udcd="clr-namespace:UiPath.DocumentProcessing.Contracts.Dom;assembly=UiPath.DocumentProcessing.Contracts" xmlns:udcr="clr-namespace:UiPath.DocumentProcessing.Contracts.Results;assembly=UiPath.DocumentProcessing.Contracts" xmlns:udct="clr-namespace:UiPath.DocumentProcessing.Contracts.Taxonomy;assembly=UiPath.DocumentProcessing.Contracts" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uiad="clr-namespace:UiPath.IntelligentOCR.Activities.Digitization;assembly=UiPath.IntelligentOCR.Activities" xmlns:uiad1="clr-namespace:UiPath.IntelligentOCR.Activities.DocumentClassification;assembly=UiPath.IntelligentOCR.Activities" xmlns:uiat="clr-namespace:UiPath.IntelligentOCR.Activities.TaxonomyManagement;assembly=UiPath.IntelligentOCR.Activities" xmlns:uiat1="clr-namespace:UiPath.IntelligentOCR.Activities.Training;assembly=UiPath.IntelligentOCR.Activities" xmlns:uiav="clr-namespace:UiPath.IntelligentOCR.Activities.ValidationStation;assembly=UiPath.IntelligentOCR.Activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="키워드 기반 분류기 학습, 사용자 검증 스페이스연을 이용해서 직접 분류기를 학습 함. " DisplayName="Training" sap:VirtualizedContainerService.HintSize="554,1337" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Text" />
      <Variable x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))" Name="Wordinfo" />
      <Variable x:TypeArguments="x:String" Name="DocText" />
      <Variable x:TypeArguments="udcd:Document" Name="DocObj" />
      <Variable x:TypeArguments="udcr:ClassificationResult[]" Name="DocClassResult" />
      <Variable x:TypeArguments="udct:DocumentTaxonomy" Name="Taxonomy" />
      <Variable x:TypeArguments="s:String[]" Name="Files" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <uiat:LoadTaxonomy sap2010:Annotation.AnnotationText="우선 TaxanomyManager를 실행시켜 문서 종류와 문서에서 필요한 항목을 기술해야 함.&#xD;&#xA;Studio 상단에 있는 TaxnomyManager를 실행 시키면 됨 " DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="512,124" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[Taxonomy]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uiat:LoadTaxonomy>
    <Assign DisplayName="Assign - 처리할 문서 리스트 " sap:VirtualizedContainerService.HintSize="512,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[Files]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("input", "*.tif")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="512,954" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Files]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="476,820" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="udcr:ExtractionResult" Name="HumanValidated" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uiad:DigitizeDocument sap2010:Annotation.AnnotationText="이미지 문서에서 텍스트 정보를 추출 함 &#xD;&#xA;설치된 OCR 엔진을 이용할 수 있음 " DegreeOfParallelism="1" DisplayName="Digitize Document" DocumentObjectModel="[DocObj]" DocumentPath="[file]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="434,230" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
              <uiad:DigitizeDocument.OCREngine>
                <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                  <ActivityFunc.Argument>
                    <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                  </ActivityFunc.Argument>
                  <uoa:OmniPageOCR Output="{x:Null}" Text="{x:Null}" sap2010:Annotation.AnnotationText="한글을 사용하는 경우 EnginePack을 Extended로 선택해 줌 " BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,79" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]" Language="auto" Profile="None" Scale="1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uoa:OmniPageOCR>
                </ActivityFunc>
              </uiad:DigitizeDocument.OCREngine>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uiad:DigitizeDocument>
            <uiav:PresentValidationStation AutomaticExtractionResults="{x:Null}" sap2010:Annotation.AnnotationText="사용자 검증 스테이션을 실행시켜 직접 사용자가 문서의 종류를 선택하도록 함 " DisplayName="Present Validation Station" DocumentObjectModel="[DocObj]" DocumentPath="[file]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="434,79" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" Taxonomy="[Taxonomy]" ValidatedExtractionResults="[HumanValidated]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uiav:PresentValidationStation>
            <uiat1:TrainClassifiersScope sap2010:Annotation.AnnotationText="사용자 검증 스테이션으로 통해서 검증한 결과를 넣어주고 문서를 분류함. &#xD;&#xA;이때 분류자 구성을 선택해서 어떠한 문서에 대해서 분류할지 지정해줘야 함." DisplayName="트레인 분류자 범위" DocumentObjectModel="[DocObj]" DocumentPath="[file]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="434,339" HumanValidatedData="[HumanValidated]" sap2010:WorkflowViewState.IdRef="TrainClassifiersScope_1" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UId617cc5a90694424a145de0f145c037d&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Invoice.Type1.JGoldsmith&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoice.Type1.JGoldsmith&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Invoice.Type1.SmithNDalson&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoice.Type1.SmithNDalson&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Invoice.Type1.uipath&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoice.Type1.uipath&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UId617cc5a90694424a145de0f145c037d&quot;:&quot;0&quot;}}">
              <uiat1:TrainClassifiersScope.Trainables>
                <uiad1:KeywordBasedClassifier ClassifierResult="{x:Null}" DocumentTypes="{x:Null}" sap2010:Annotation.AnnotationText="키워드 기분 문서 분류 값이  JSON 포맷을 저장 됨 " DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="334,86" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="DocumentProcessing\classifier.json" PersistenceId="UId617cc5a90694424a145de0f145c037d">
                  <uiad1:KeywordBasedClassifier.DocumentObjectModel>
                    <InArgument x:TypeArguments="udcd:Document">
                      <DelegateArgumentValue x:TypeArguments="udcd:Document">
                        <DelegateInArgument x:TypeArguments="udcd:Document" Name="DocumentObjectModel" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </uiad1:KeywordBasedClassifier.DocumentObjectModel>
                  <uiad1:KeywordBasedClassifier.DocumentPath>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </uiad1:KeywordBasedClassifier.DocumentPath>
                  <uiad1:KeywordBasedClassifier.DocumentText>
                    <InArgument x:TypeArguments="x:String">
                      <DelegateArgumentValue x:TypeArguments="x:String">
                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </uiad1:KeywordBasedClassifier.DocumentText>
                  <uiad1:KeywordBasedClassifier.HumanValidatedData>
                    <InArgument x:TypeArguments="udcr:ExtractionResult[]">
                      <DelegateArgumentValue x:TypeArguments="udcr:ExtractionResult[]">
                        <DelegateInArgument x:TypeArguments="udcr:ExtractionResult[]" Name="HumanValidatedData" />
                      </DelegateArgumentValue>
                    </InArgument>
                  </uiad1:KeywordBasedClassifier.HumanValidatedData>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uiad1:KeywordBasedClassifier>
              </uiat1:TrainClassifiersScope.Trainables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uiat1:TrainClassifiersScope>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>